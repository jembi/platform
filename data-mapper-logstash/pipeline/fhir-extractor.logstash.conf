input {
  http {
    port => 5055
    additional_codecs => {
      "application/fhir+json" => "json"
    }
  }
}

filter {
  if ![entry] or ![entry][0] {
    drop {
    }
  }

  split {
    field => "entry"
  }

  mutate {
    rename => ["[entry][resource]", "resource"]
  }

  mutate {
    rename => ["[entry][request][method]", "method"]
  }

  translate {
    field => "[method]"
    destination => "[@metadata][action]"
    dictionary => {
      "POST" => "update"
      "PUT" => "update"
      "DELETE" => "delete"
    }
    fallback => "update"
  }

  mutate {
    remove_field => ["entry", "resourceType", "total", "link", "headers", "meta", "id", "type", "@version", "host"]
  }

  mutate {
    add_field => {
      "[@metadata][lc_resourceType]" => "%{[resource][resourceType]}"
    }
  }

  mutate {
    lowercase => [ "[@metadata][lc_resourceType]" ]
  }
}

output {
  # workaround because of this: https://github.com/logstash-plugins/logstash-output-elasticsearch/issues/940
  if [@metadata][action] == "update" {
    elasticsearch {
      hosts => [ "analytics-datastore-elastic-search:9200" ]
      index => "fhir-raw-%{[@metadata][lc_resourceType]}"
      document_id => "%{[resource][id]}"
      action => "update"
      doc_as_upsert => true
      user => "elastic"
      password => "${ES_ELASTIC}"
    }
  }

  if [@metadata][action] == "delete" {
    elasticsearch {
      hosts => [ "analytics-datastore-elastic-search:9200" ]
      index => "fhir-raw-%{[@metadata][lc_resourceType]}"
      document_id => "%{[resource][id]}"
      action => "delete"
      doc_as_upsert => true
      user => "elastic"
      password => "${ES_ELASTIC}"
    }
  }
}
