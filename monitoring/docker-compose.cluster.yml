version: '3.9'

services:
  prometheus:
    deploy:
      placement:
        constraints:
          - "node.labels.name==node-1"
      replicas: 1

  prometheus_backup:
    image: prom/prometheus:v2.38.0
    user: root
    deploy:
      placement:
        constraints:
          - "node.labels.name!=node-1"
      replicas: 1
    volumes:
      - prometheus_data_backup:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - target: /etc/prometheus/prometheus.yml
        source: prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      public:
      default:

  minio-01:
    deploy:
      placement:
        constraints:
          - "node.labels.name==node-1"

  minio-02:
    image: quay.io/minio/minio:RELEASE.2022-10-24T18-35-07Z
    entrypoint: sh
    command: -c 'mkdir -p /data1/loki /data2/loki && minio server --console-address ":9001" http://minio-0{1...4}/data{1...2}'
    environment:
      MINIO_ROOT_USER: ${MO_SECURITY_ADMIN_USER}
      MINIO_ROOT_PASSWORD: ${MO_SECURITY_ADMIN_PASSWORD}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio-02
    volumes:
      - minio-02-data1:/data1
      - minio-02-data2:/data2
    deploy:
      placement:
        constraints:
          - "node.labels.name==node-1"
      replicas: 1

  minio-03:
    image: quay.io/minio/minio:RELEASE.2022-10-24T18-35-07Z
    entrypoint: sh
    command: -c 'mkdir -p /data1/loki /data2/loki && minio server --console-address ":9001" http://minio-0{1...4}/data{1...2}'
    environment:
      MINIO_ROOT_USER: ${MO_SECURITY_ADMIN_USER}
      MINIO_ROOT_PASSWORD: ${MO_SECURITY_ADMIN_PASSWORD}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio-03
    volumes:
      - minio-03-data1:/data1
      - minio-03-data2:/data2
    deploy:
      placement:
        constraints:
          - "node.labels.name==node-2"
      replicas: 1

  minio-04:
    image: quay.io/minio/minio:RELEASE.2022-10-24T18-35-07Z
    entrypoint: sh
    command: -c 'mkdir -p /data1/loki /data2/loki && minio server --console-address ":9001" http://minio-0{1...4}/data{1...2}'
    environment:
      MINIO_ROOT_USER: ${MO_SECURITY_ADMIN_USER}
      MINIO_ROOT_PASSWORD: ${MO_SECURITY_ADMIN_PASSWORD}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio-04
    volumes:
      - minio-04-data1:/data1
      - minio-04-data2:/data2
    deploy:
      placement:
        constraints:
          - "node.labels.name==node-3"
      replicas: 1

volumes:
  prometheus_data_backup:
  minio-02-data1:
  minio-02-data2:
  minio-03-data1:
  minio-03-data2:
  minio-04-data1:
  minio-04-data2:
